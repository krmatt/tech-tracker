{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\Programming Practice\\\\Raptor Maps\\\\tech-tracker\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken = 'pk.eyJ1IjoidHJtYXR0ayIsImEiOiJja210dGd2cjYwdXRzMnhzOTN1MDRsYnI2In0.OdQglh6qpMq-QQOm12p8Ng';\nvar currentMarkers = [];\n\nvar Map = /*#__PURE__*/function (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  var _super = _createSuper(Map);\n\n  // class for the map\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      lng: -115.61,\n      // starting coordinates\n      lat: 32.67,\n      zoom: 12,\n      poll: 0\n    };\n    _this.mapContainer = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var _this$state, lng, lat, zoom, map, url, response, data, locations;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$state = this.state, lng = _this$state.lng, lat = _this$state.lat, zoom = _this$state.zoom;\n                map = new mapboxgl.Map({\n                  container: this.mapContainer.current,\n                  style: 'mapbox://styles/mapbox/streets-v11',\n                  center: [lng, lat],\n                  zoom: zoom\n                });\n                url = 'http://localhost:5000/' + this.state.poll; // CHANGE TO CONST?\n\n                _context.next = 5;\n                return fetch(url);\n\n              case 5:\n                response = _context.sent;\n                _context.next = 8;\n                return response.json();\n\n              case 8:\n                data = _context.sent;\n                locations = data.features;\n                console.log(url);\n                console.log(response);\n                console.log(data);\n                console.log(locations);\n                locations.forEach(function (technician) {\n                  var el = document.createElement('div');\n                  el.className = 'marker';\n                  var newMarker = new mapboxgl.Marker(el).setLngLat(technician.geometry.coordinates) // position\n                  .setRotation(technician.properties.bearing) // bearing\n                  .setPopup(new mapboxgl.Popup({\n                    offset: 25\n                  }).setHTML('<h4>' + technician.properties.name + '</h4>')).addTo(map);\n                  currentMarkers.push(newMarker);\n                });\n                console.log(currentMarkers);\n                this.setState({\n                  poll: this.state.poll + 1\n                });\n                console.log(this.state.poll); // DELETE BEFORE SUBMISSION\n\n                map.on('move', function () {\n                  // get new map coordinates\n                  _this2.setState({\n                    lng: map.getCenter().lng.toFixed(4),\n                    lat: map.getCenter().lat.toFixed(4),\n                    zoom: map.getZoom().toFixed(2)\n                  });\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          lng = _this$state2.lng,\n          lat = _this$state2.lat,\n          zoom = _this$state2.zoom;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"poll-button\",\n          onClick: function onClick() {\n            return _this3.componentDidMount();\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: this.mapContainer,\n          className: \"map-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Map;\n}(React.Component); // ===========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 3\n}, this), document.getElementById('app'));","map":{"version":3,"sources":["C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/src/index.js"],"names":["React","ReactDOM","mapboxgl","MapboxWorker","workerClass","accessToken","currentMarkers","Map","props","state","lng","lat","zoom","poll","mapContainer","createRef","map","container","current","style","center","url","fetch","response","json","data","locations","features","console","log","forEach","technician","el","document","createElement","className","newMarker","Marker","setLngLat","geometry","coordinates","setRotation","properties","bearing","setPopup","Popup","offset","setHTML","name","addTo","push","setState","on","getCenter","toFixed","getZoom","componentDidMount","Component","render","getElementById"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,YAAP,MAAyB,mDAAzB;;AAEAD,QAAQ,CAACE,WAAT,GAAuBD,YAAvB;AACAD,QAAQ,CAACG,WAAT,GAAuB,2FAAvB;AAEA,IAAIC,cAAc,GAAG,EAArB;;IAEMC,G;;;;;AAA8B;AAClC,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,CAAC,MADK;AACG;AACdC,MAAAA,GAAG,EAAE,KAFM;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMA,UAAKC,YAAL,gBAAoBd,KAAK,CAACe,SAAN,EAApB;AARiB;AASlB;;;;;wFAED;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAC2B,KAAKN,KADhC,EACSC,GADT,eACSA,GADT,EACcC,GADd,eACcA,GADd,EACmBC,IADnB,eACmBA,IADnB;AAEQI,gBAAAA,GAFR,GAEc,IAAId,QAAQ,CAACK,GAAb,CAAiB;AAC3BU,kBAAAA,SAAS,EAAE,KAAKH,YAAL,CAAkBI,OADF;AAE3BC,kBAAAA,KAAK,EAAE,oCAFoB;AAG3BC,kBAAAA,MAAM,EAAE,CAACV,GAAD,EAAMC,GAAN,CAHmB;AAI3BC,kBAAAA,IAAI,EAAEA;AAJqB,iBAAjB,CAFd;AASMS,gBAAAA,GATN,GASY,2BAA2B,KAAKZ,KAAL,CAAWI,IATlD,EASuD;;AATvD;AAAA,uBAUuBS,KAAK,CAACD,GAAD,CAV5B;;AAAA;AAUME,gBAAAA,QAVN;AAAA;AAAA,uBAWmBA,QAAQ,CAACC,IAAT,EAXnB;;AAAA;AAWMC,gBAAAA,IAXN;AAYMC,gBAAAA,SAZN,GAYkBD,IAAI,CAACE,QAZvB;AAcEC,gBAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAO,gBAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAK,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,gBAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEAA,gBAAAA,SAAS,CAACI,OAAV,CAAkB,UAASC,UAAT,EAAqB;AACrC,sBAAIC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAT;AACAF,kBAAAA,EAAE,CAACG,SAAH,GAAe,QAAf;AAEA,sBAAIC,SAAS,GAAG,IAAIlC,QAAQ,CAACmC,MAAb,CAAoBL,EAApB,EACbM,SADa,CACHP,UAAU,CAACQ,QAAX,CAAoBC,WADjB,EAC8B;AAD9B,mBAEbC,WAFa,CAEDV,UAAU,CAACW,UAAX,CAAsBC,OAFrB,EAE8B;AAF9B,mBAGbC,QAHa,CAGJ,IAAI1C,QAAQ,CAAC2C,KAAb,CAAmB;AAACC,oBAAAA,MAAM,EAAE;AAAT,mBAAnB,EACTC,OADS,CACD,SAAShB,UAAU,CAACW,UAAX,CAAsBM,IAA/B,GAAsC,OADrC,CAHI,EAKbC,KALa,CAKPjC,GALO,CAAhB;AAMAV,kBAAAA,cAAc,CAAC4C,IAAf,CAAoBd,SAApB;AACD,iBAXD;AAaAR,gBAAAA,OAAO,CAACC,GAAR,CAAYvB,cAAZ;AAEA,qBAAK6C,QAAL,CAAc;AACZtC,kBAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IAAX,GAAkB;AADZ,iBAAd;AAIAe,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWI,IAAvB,EAtCF,CAsCgC;;AAE9BG,gBAAAA,GAAG,CAACoC,EAAJ,CAAO,MAAP,EAAe,YAAM;AAAE;AACrB,kBAAA,MAAI,CAACD,QAAL,CAAc;AACZzC,oBAAAA,GAAG,EAAEM,GAAG,CAACqC,SAAJ,GAAgB3C,GAAhB,CAAoB4C,OAApB,CAA4B,CAA5B,CADO;AAEZ3C,oBAAAA,GAAG,EAAEK,GAAG,CAACqC,SAAJ,GAAgB1C,GAAhB,CAAoB2C,OAApB,CAA4B,CAA5B,CAFO;AAGZ1C,oBAAAA,IAAI,EAAEI,GAAG,CAACuC,OAAJ,GAAcD,OAAd,CAAsB,CAAtB;AAHM,mBAAd;AAKD,iBAND;;AAxCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAiDA,kBAAS;AAAA;;AAAA,yBACkB,KAAK7C,KADvB;AAAA,UACAC,GADA,gBACAA,GADA;AAAA,UACKC,GADL,gBACKA,GADL;AAAA,UACUC,IADV,gBACUA,IADV;AAEP,0BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oCACcF,GADd,mBACgCC,GADhC,eAC8CC,IAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC4C,iBAAL,EAAN;AAAA,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAK,UAAA,GAAG,EAAE,KAAK1C,YAAf;AAA6B,UAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;;;;EA1Eed,KAAK,CAACyD,S,GA6ExB;;;AAEAxD,QAAQ,CAACyD,MAAT,eACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEzB,QAAQ,CAAC0B,cAAT,CAAwB,KAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\n\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken = 'pk.eyJ1IjoidHJtYXR0ayIsImEiOiJja210dGd2cjYwdXRzMnhzOTN1MDRsYnI2In0.OdQglh6qpMq-QQOm12p8Ng';\n\nvar currentMarkers = [];\n\nclass Map extends React.Component { // class for the map\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -115.61, // starting coordinates\n      lat: 32.67,\n      zoom: 12,\n      poll: 0\n    };\n    this.mapContainer = React.createRef();\n  }\n\n  async componentDidMount() {\n    const {lng, lat, zoom} = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    var url = 'http://localhost:5000/' + this.state.poll // CHANGE TO CONST?\n    var response = await fetch(url);\n    var data = await response.json();\n    var locations = data.features;\n\n    console.log(url);\n    console.log(response);\n    console.log(data);\n    console.log(locations);\n\n    locations.forEach(function(technician) {\n      var el = document.createElement('div');\n      el.className = 'marker';\n\n      var newMarker = new mapboxgl.Marker(el)\n        .setLngLat(technician.geometry.coordinates) // position\n        .setRotation(technician.properties.bearing) // bearing\n        .setPopup(new mapboxgl.Popup({offset: 25})\n        .setHTML('<h4>' + technician.properties.name + '</h4>'))\n        .addTo(map)\n      currentMarkers.push(newMarker);\n    });\n\n    console.log(currentMarkers)\n\n    this.setState({\n      poll: this.state.poll + 1\n    });\n\n    console.log(this.state.poll); // DELETE BEFORE SUBMISSION\n\n    map.on('move', () => { // get new map coordinates\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  render() {\n    const {lng, lat, zoom} = this.state;\n    return (\n      <div>\n        <div className=\"sidebar\">\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n        <button className=\"poll-button\" onClick={() => this.componentDidMount()}>\n          Update\n        </button>\n        <div ref={this.mapContainer} className=\"map-container\" />\n        </div>\n    );\n  }\n}\n\n// ===========================================\n\nReactDOM.render(\n  <Map />,\n  document.getElementById('app')\n);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\Programming Practice\\\\Raptor Maps\\\\tech-tracker\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken = 'pk.eyJ1IjoidHJtYXR0ayIsImEiOiJja210dGd2cjYwdXRzMnhzOTN1MDRsYnI2In0.OdQglh6qpMq-QQOm12p8Ng'; //var input = {\n//    \"features\": [\n//\t{ \"type\": \"Feature\", \"properties\": { \"id\": 0,  \"name\": \"Tech 3\", \"tsecs\": 1592078400, \"bearing\": 0 }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -115.606391900599817, 32.673693943392962 ] } },\n//\t{ \"type\": \"Feature\", \"properties\": {  \"id\": 0,  \"name\": \"Tech 1\", \"bearing\": 87.0, \"tsecs\": 1592078400  }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -115.585908073767968, 32.679083641964432 ] } },\n//\t{ \"type\": \"Feature\", \"properties\": { \"id\": 0,   \"name\": \"Tech 2\", \"bearing\": 270, \"tsecs\": 1592078400 }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -115.590876702138573, 32.676567128293193 ] } }\n//    ]\n//}\n//\n//var data = input.features\n\nvar Map = /*#__PURE__*/function (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  var _super = _createSuper(Map);\n\n  // class for the map\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      lng: -115.61,\n      // starting coordinates\n      lat: 32.67,\n      zoom: 12,\n      poll: 0\n    };\n    _this.mapContainer = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          lng = _this$state.lng,\n          lat = _this$state.lat,\n          zoom = _this$state.zoom;\n      var map = new mapboxgl.Map({\n        container: this.mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [lng, lat],\n        zoom: zoom\n      }); //    data.forEach(function(technician) {\n      //      var el = document.createElement('div');\n      //      el.className = 'marker';\n      //\n      //      new mapboxgl.Marker(el)\n      //        .setLngLat(technician.geometry.coordinates) // position\n      //        .setRotation(technician.properties.bearing) // bearing\n      //        .setPopup(new mapboxgl.Popup({offset: 25})\n      //        .setHTML('<h5>' + technician.properties.name + '</h5>'))\n      //        .addTo(map);\n      //    });\n\n      this.updateCoords();\n      map.on('move', function () {\n        // get new map coordinates\n        _this2.setState({\n          lng: map.getCenter().lng.toFixed(4),\n          lat: map.getCenter().lat.toFixed(4),\n          zoom: map.getZoom().toFixed(2)\n        });\n      });\n    }\n  }, {\n    key: \"updateCoords\",\n    value: function updateCoords() {\n      // get next set of location data\n      var url = 'http://localhost:5000/' + this.state.poll; // CHANGE TO CONST?\n\n      var response = fetch(url);\n      var data = response.json().features;\n      data.foreach(function (technician) {\n        var el = document.createElement('div');\n        el.className = 'marker';\n        new mapboxgl.Marker(el).setLngLat(technician.geometry.coordinates) // position\n        .setRotation(technician.properties.bearing) // bearing\n        .setPopup(new mapboxgl.popup({\n          offset: 25\n        }).setHTML('<h5>' + technician.properties.name + '</h5>')).addTo(map);\n      });\n      this.setState({\n        poll: this.state.poll + 1\n      });\n      console.log(this.state.poll); // DELETE BEFORE SUBMISSION\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          lng = _this$state2.lng,\n          lat = _this$state2.lat,\n          zoom = _this$state2.zoom;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"poll-button\",\n          onClick: function onClick() {\n            return _this3.updateCoords();\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: this.mapContainer,\n          className: \"map-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Map;\n}(React.Component); // ===========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 105,\n  columnNumber: 3\n}, this), document.getElementById('app'));","map":{"version":3,"sources":["C:/Users/Matt/Documents/Programming Practice/Raptor Maps/tech-tracker/src/index.js"],"names":["React","ReactDOM","mapboxgl","MapboxWorker","workerClass","accessToken","Map","props","state","lng","lat","zoom","poll","mapContainer","createRef","map","container","current","style","center","updateCoords","on","setState","getCenter","toFixed","getZoom","url","response","fetch","data","json","features","foreach","technician","el","document","createElement","className","Marker","setLngLat","geometry","coordinates","setRotation","properties","bearing","setPopup","popup","offset","setHTML","name","addTo","console","log","Component","render","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\n\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken = 'pk.eyJ1IjoidHJtYXR0ayIsImEiOiJja210dGd2cjYwdXRzMnhzOTN1MDRsYnI2In0.OdQglh6qpMq-QQOm12p8Ng';\n\n//var input = {\n//    \"features\": [\n//\t{ \"type\": \"Feature\", \"properties\": { \"id\": 0,  \"name\": \"Tech 3\", \"tsecs\": 1592078400, \"bearing\": 0 }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -115.606391900599817, 32.673693943392962 ] } },\n//\t{ \"type\": \"Feature\", \"properties\": {  \"id\": 0,  \"name\": \"Tech 1\", \"bearing\": 87.0, \"tsecs\": 1592078400  }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -115.585908073767968, 32.679083641964432 ] } },\n//\t{ \"type\": \"Feature\", \"properties\": { \"id\": 0,   \"name\": \"Tech 2\", \"bearing\": 270, \"tsecs\": 1592078400 }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ -115.590876702138573, 32.676567128293193 ] } }\n//    ]\n//}\n//\n//var data = input.features\n\nclass Map extends React.Component { // class for the map\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -115.61, // starting coordinates\n      lat: 32.67,\n      zoom: 12,\n      poll: 0\n    };\n    this.mapContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    const {lng, lat, zoom} = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n//    data.forEach(function(technician) {\n//      var el = document.createElement('div');\n//      el.className = 'marker';\n//\n//      new mapboxgl.Marker(el)\n//        .setLngLat(technician.geometry.coordinates) // position\n//        .setRotation(technician.properties.bearing) // bearing\n//        .setPopup(new mapboxgl.Popup({offset: 25})\n//        .setHTML('<h5>' + technician.properties.name + '</h5>'))\n//        .addTo(map);\n//    });\n\n    this.updateCoords();\n\n    map.on('move', () => { // get new map coordinates\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  updateCoords() { // get next set of location data\n    var url = 'http://localhost:5000/' + this.state.poll; // CHANGE TO CONST?\n    var response = fetch(url);\n    var data = response.json().features;\n\n    data.foreach(function(technician) {\n      var el = document.createElement('div');\n      el.className = 'marker';\n\n      new mapboxgl.Marker(el)\n        .setLngLat(technician.geometry.coordinates) // position\n        .setRotation(technician.properties.bearing) // bearing\n        .setPopup(new mapboxgl.popup({offset: 25})\n        .setHTML('<h5>' + technician.properties.name + '</h5>'))\n        .addTo(map)\n    });\n\n    this.setState({\n      poll: this.state.poll + 1\n    });\n    console.log(this.state.poll); // DELETE BEFORE SUBMISSION\n  }\n\n  render() {\n    const {lng, lat, zoom} = this.state;\n    return (\n      <div>\n        <div className=\"sidebar\">\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n        <button className=\"poll-button\" onClick={() => this.updateCoords()}>\n          Update\n        </button>\n        <div ref={this.mapContainer} className=\"map-container\" />\n        </div>\n    );\n  }\n}\n\n// ===========================================\n\nReactDOM.render(\n  <Map />,\n  document.getElementById('app')\n);\n"]},"metadata":{},"sourceType":"module"}